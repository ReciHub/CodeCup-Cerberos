import React, { Component } from 'react';
import {
  Platform,
  StyleSheet,
  Text,
  View,
  TouchableOpacity,
  PushNotificationIOS
} from 'react-native';

// chave:  AIzaSyCEs0OwST230jxBb-RMyaf8WO-CUkKdbDI 

// token: cFkQ8IzlkEg:APA91bE8K95TFH6PGrWLdz2CaD_Gk3iX_8DhgeKT8QcbGO8mkdLX5dEHz9ilAALofbOfXNE30MmSpWZfpKHK69W0LyvZIZ_teLteAMQscHRWtnlreCjX5Uh5iugsazBNChR5VyuIXpbP
import WifiManager from 'pavex-react-native-wifi-manager'
import axios from 'axios'

var url = "https://cerbero-thiagoaugustomartins.c9users.io:8081/addUser"

var PushNotification = require('react-native-push-notification');

PushNotification.configure({

  // (optional) Called when Token is generated (iOS and Android)
  onRegister: function(token) {
      console.log( 'TOKEN:', token );
      // fZstRBCLrhY:APA91bEVIOY6bQQSrcqMC9gMXu6p4hg-uT-rBP1Apr4rqn-SRgAJ1gkS35Xpt1IXgXZA6KGKYmJC1ZxbYP4QZWrCeyxNwWqgxrivIfWb-QAMpOkXEK_EJ_sk87gLCGVwcFK0vhTh1FoU
  },

  // (required) Called when a remote or local notification is opened or received
  onNotification: function(notification) {
      console.log( 'NOTIFICATION:', notification );

      PushNotification.localNotification({
        /* Android Only Properties */
        // id: "6545415", // (optional) Valid unique 32 bit integer specified as string. default: Autogenerated Unique ID
        autoCancel: false,
        largeIcon: "porquin", // (optional) default: "ic_launcher"
        smallIcon: "porquin", // (optional) default: "ic_notification" with fallback for "ic_launcher"
        subText: "Compra", // (optional) default: none
        color: "#F3749A", // (optional) default: system default
        vibrate: true, // (optional) default: true
        vibration: 200, // vibration length in milliseconds, ignored if vibrate=false, default: 1000
        title: "Compra na ", // (optional, for iOS this is only used in apple watch, the title will be the app name on other iOS devices)
        message: "VocÃª fez uma compra no valor de R$ ", // (required)
        // repeatType: '',
        // group: 'compra',

      });

      // process the notification
      
      // required on iOS only (see fetchCompletionHandler docs: https://facebook.github.io/react-native/docs/pushnotificationios.html)
      notification.finish(PushNotificationIOS.FetchResult.NoData);
  },

  // ANDROID ONLY: GCM Sender ID (optional - not required for local notifications, but is need to receive remote push notifications)
  senderID: "888431876495",

  // IOS ONLY (optional): default: all - Permissions to register.
  permissions: {
      alert: true,
      badge: true,
      sound: true
  },

  // Should the initial notification be popped automatically
  // default: true
  popInitialNotification: true,

  /**
    * (optional) default: true
    * - Specified if permissions (ios) and token (android and ios) will requested or not,
    * - if not, you must call PushNotificationsHandler.requestPermissions() later
    */
  requestPermissions: true,
});

const instructions = Platform.select({
  ios: 'Press Cmd+R to reload,\n' +
    'Cmd+D or shake for dev menu',
  android: 'Double tap R on your keyboard to reload,\n' +
    'Shake or press menu button for dev menu',
});

export default class App extends Component {
  constructor(props) {
    super(props)
  }

  componentDidMount() {
    // WifiManager.startScan().then(res => {
    //   WifiManager.getScanResults().then(res => {
    //     // console.log(res)
    //     axios.post(url, {
    //       WIFI: res,
    //     })
    //     .then(function (response) {
    //       console.log("response server:",response);
    //     })
    //     .catch(function (error) {
    //       console.log("response erro:",error);
    //     });
    //   })
    //   .catch(err => {
    //     console.log("err result:", err)
    //   })
    // })
    // .catch(err => {
    //   console.log("erro:", err)
    // })
  
  }

  render() {
    return (
      <TouchableOpacity style={styles.container} onPress={() => {
        console.log("press")
      }} >
        <View>
        <Text style={styles.welcome}>
          Welcome to React Native!
        </Text>
        <Text style={styles.instructions}>
          To get started, edit App.js
        </Text>
        <Text style={styles.instructions}>
          {instructions}
        </Text>
        </View>
      </TouchableOpacity>
    );
  }
}

const styles = StyleSheet.create({
});